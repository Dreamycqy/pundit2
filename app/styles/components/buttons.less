/**
 * BUTTONS
 *
 * Style for custom buttons
 */

/* ------------------------------------ *\
   #PUNDIT-BUTTON
\* ------------------------------------ */

/* Default button */
.pnd-btn {
    display: inline-block;
    height: 29px;
    margin: 0;
    padding: 0 10px;

    /* Gradient bg with mixin */
    #gradient > .vertical(lighten(@color-button-bg, 1); darken(@color-button-bg, 1)); // It's a Bootstrap mixin
    background-color: #fff;
    border: 0;
    outline: 0;

    color: @color-button-text-dark;
    .text-white-emboss();
    font-size: 12px;
    font-weight: @btn-font-weight;
    text-align: center;
    vertical-align: middle;
    white-space: nowrap;
    cursor: pointer;

    &:hover,
    &:focus,
    &.focus {
        /* Gradient bg with mixin */
        #gradient > .vertical(darken(lighten(@color-button-bg, 1), 5); darken(darken(@color-button-bg, 1), 5));
    }

    &:active,
    &.active {
        outline: 0;
    }

    &.disabled,
    &[disabled],
    fieldset[disabled] & {
        cursor: @cursor-disabled;
        color: fade(@color-button-text-dark, 50%);
        pointer-events: none; // Future-proof disabling of clicks
        /* Gradient bg with mixin */
        #gradient > .vertical(fade(lighten(@color-button-bg, 1), 40%); fade(darken(@color-button-bg, 1), 40%));
    }
}

/* Smaller buttons */
.pnd-btn-small {
    height: 22px;
    font-size: 11px;
}


/* ------------------------------------ *\
   #CALL-TO-ACTION-BUTTON
\* ------------------------------------ */

/* Usually green button */
.pnd-btn-calltoaction {
    /* Gradient bg with mixin */
    #gradient > .vertical(lighten(@color-button-bg-cta, 1); darken(@color-button-bg-cta, 1));
    color: @color-button-text-light;
    .text-dark-emboss();

    &:hover,
    &:focus,
    &.focus {
        /* Gradient bg with mixin */
        #gradient > .vertical(darken(lighten(@color-button-bg-cta, 1), 5); darken(darken(@color-button-bg-cta, 1), 5));
    }

    &.disabled,
    &[disabled],
    fieldset[disabled] & {
        color: fade(@color-button-text-light, 60%);
        text-shadow: none;
        /* Gradient bg with mixin */
        #gradient > .vertical(fade(lighten(@color-button-bg-cta, 1), 40%); fade(darken(@color-button-bg-cta, 1), 40%));
    }

}


/* ------------------------------------ *\
   #SEMANTIC-BUTTONS
\* ------------------------------------ */
/* Buttons with custom colors for Subject, Object, Predicate */

/* Subject button */
.pnd-btn-subject {
    #gradient > .vertical(lighten(@subject-color, 2); darken(@subject-color, 2));
    color: @color-button-text-light;
    .text-dark-emboss();

    &:hover,
    &:focus,
    &.focus {
        #gradient > .vertical(darken(lighten(@subject-color, 1), 5); darken(darken(@subject-color, 1), 5));
    }

    &.disabled,
    &[disabled],
    fieldset[disabled] & {
        color: fade(@color-button-text-light, 60%);
        text-shadow: none;
        #gradient > .vertical(fade(lighten(@subject-color, 1), 40%); fade(darken(@subject-color, 1), 40%));
    }

}

/* Predicate button */
.pnd-btn-predicate {
    #gradient > .vertical(lighten(@predicate-color, 2); darken(@predicate-color, 2));
    color: @color-button-text-light;
    .text-dark-emboss();

    &:hover,
    &:focus,
    &.focus {
        #gradient > .vertical(darken(lighten(@predicate-color, 1), 5); darken(darken(@predicate-color, 1), 5));
    }

    &.disabled,
    &[disabled],
    fieldset[disabled] & {
        color: fade(@color-button-text-light, 60%);
        text-shadow: none;
        #gradient > .vertical(fade(lighten(@predicate-color, 1), 40%); fade(darken(@predicate-color, 1), 40%));
    }

}

/* Object button */
.pnd-btn-object {
    #gradient > .vertical(lighten(@object-color, 2); darken(@object-color, 2));
    color: @color-button-text-light;
    .text-dark-emboss();

    &:hover,
    &:focus,
    &.focus {
        #gradient > .vertical(darken(lighten(@object-color, 1), 5); darken(darken(@object-color, 1), 5));
    }

    &.disabled,
    &[disabled],
    fieldset[disabled] & {
        color: fade(@color-button-text-light, 60%);
        text-shadow: none;
        #gradient > .vertical(fade(lighten(@object-color, 1), 40%); fade(darken(@object-color, 1), 40%));
    }
}


/* ------------------------------------ *\
   #AVAILABLE-WIDTH-FILL-BUTTONS
\* ------------------------------------ */

/*
The buttons with the class "pnd-btn-fill-width" always
try to fill the available with.
This class works for one, two or three buttons but
can be extended to support more buttons
*/

/* One button */
.pnd-btn-fill-width:first-child:nth-last-child(1) {
    width: 100%;
}

/* Two buttons */
.pnd-btn-fill-width:first-child:nth-last-child(2),
.pnd-btn-fill-width:first-child:nth-last-child(2) ~ .pnd-btn-fill-width {
    width: 50%;
}

/* Three buttons  */
.pnd-btn-fill-width:first-child:nth-last-child(3),
.pnd-btn-fill-width:first-child:nth-last-child(3) ~ .pnd-btn-fill-width {
    width: 33.3333%;
}
